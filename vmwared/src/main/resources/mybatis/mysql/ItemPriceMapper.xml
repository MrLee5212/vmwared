<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.utron.yw.dao.ItemPriceMapper" >
  <resultMap id="BaseResultMap" type="com.utron.yw.model.ItemPrice" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="scheme_id" property="schemeId" jdbcType="INTEGER" />
    <result column="item_id" property="itemId" jdbcType="INTEGER" />
    <result column="qty" property="qty" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="expression" property="expression" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, scheme_id, item_id, qty, price, description, expression
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_price_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_price_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.utron.yw.model.ItemPrice" >
    insert into t_price_item (id, scheme_id, item_id, 
      qty, price, description, 
      expression)
    values (#{id,jdbcType=INTEGER}, #{schemeId,jdbcType=INTEGER}, #{itemId,jdbcType=INTEGER}, 
      #{qty,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{description,jdbcType=VARCHAR}, 
      #{expression,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.utron.yw.model.ItemPrice" >
    insert into t_price_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="schemeId != null" >
        scheme_id,
      </if>
      <if test="itemId != null" >
        item_id,
      </if>
      <if test="qty != null" >
        qty,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="expression != null" >
        expression,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="schemeId != null" >
        #{schemeId,jdbcType=INTEGER},
      </if>
      <if test="itemId != null" >
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="qty != null" >
        #{qty,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="expression != null" >
        #{expression,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.utron.yw.model.ItemPrice" >
    update t_price_item
    <set >
      <if test="schemeId != null" >
        scheme_id = #{schemeId,jdbcType=INTEGER},
      </if>
      <if test="itemId != null" >
        item_id = #{itemId,jdbcType=INTEGER},
      </if>
      <if test="qty != null" >
        qty = #{qty,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="expression != null" >
        expression = #{expression,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.utron.yw.model.ItemPrice" >
    update t_price_item
    set scheme_id = #{schemeId,jdbcType=INTEGER},
      item_id = #{itemId,jdbcType=INTEGER},
      qty = #{qty,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      description = #{description,jdbcType=VARCHAR},
      expression = #{expression,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>